// Generated by CoffeeScript 1.6.1
(function() {
  var User, auth, bcrypt;

  User = require('../models/users.js');

  auth = require('../lib/auth');

  bcrypt = require('bcrypt');

  exports.index = function(req, res) {
    auth.ssl_required(req, res, true);
    auth.auth_required(req, res);
    User.find({}, function(err, users) {
      res.render('users/index', {
        title: 'Users',
        users: users,
        flash: req.flash()
      });
    });
  };

  exports.destroy = function(req, res) {
    var id;
    auth.ssl_required(req, res, true);
    auth.auth_required(req, res);
    id = req.params.id;
    User.remove({
      _id: id
    }, function(err) {
      if (err) {
        req.flash("error", "Invalid user id.");
        res.redirect('/users/index');
      } else {
        req.flash("info", "User deleted.");
        res.redirect('/users/index');
      }
    });
  };

  exports.add = function(req, res) {
    auth.ssl_required(req, res, true);
    auth.auth_required(req, res);
    res.render('users/add', {
      title: 'Add New User',
      flash: req.flash()
    });
  };

  exports.create = function(req, res) {
    var newUser, salt, userObj;
    auth.ssl_required(req, res, true);
    auth.auth_required(req, res);
    salt = bcrypt.genSaltSync(10);
    newUser = {
      username: req.body.username,
      password: bcrypt.hashSync(req.body.password, salt),
      firstname: req.body.firstname,
      lastname: req.body.lastname,
      email: req.body.email
    };
    userObj = new User(newUser);
    userObj.save(function(err, data) {
      if (err) {
        req.flash("error", "" + err);
        res.redirect('users/add');
      } else {
        req.flash("info", "User added.");
        res.redirect('users/index');
      }
    });
  };

  exports.edit = function(req, res) {
    var id;
    auth.ssl_required(req, res, true);
    auth.auth_required(req, res);
    id = req.params.id;
    User.findOne({
      _id: id
    }, function(err, user) {
      if (err) {
        res.send(err);
      } else {
        res.render('users/edit', {
          title: 'Edit User',
          user: user,
          flash: req.flash()
        });
      }
    });
  };

  exports.update = function(req, res) {
    var newUser, salt;
    auth.ssl_required(req, res, true);
    auth.auth_required(req, res);
    if (req.body.password !== "") {
      salt = bcrypt.genSaltSync(10);
      newUser = {
        username: req.body.username,
        password: bcrypt.hashSync(req.body.password, salt),
        firstname: req.body.firstname,
        lastname: req.body.lastname,
        email: req.body.email,
        updated: Date.now()
      };
    } else {
      newUser = {
        username: req.body.username,
        firstname: req.body.firstname,
        lastname: req.body.lastname,
        email: req.body.email,
        updated: Date.now()
      };
    }
    User.update({
      _id: req.body.id
    }, newUser, function(err, data) {
      if (err) {
        req.flash("error", "" + err);
        res.redirect('users/edit/' + id);
      } else {
        req.flash("info", "User updated.");
        res.redirect('users/index');
      }
    });
  };

}).call(this);
